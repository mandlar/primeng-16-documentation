"use strict";(self.webpackChunkprimeng=self.webpackChunkprimeng||[]).push([[1422],{22963:(h,v,p)=>{p.d(v,{N:()=>f});var r=p(14769);const l=["*"];let f=(()=>{var g;class M{}return(g=M).\u0275fac=function(e){return new(e||g)},g.\u0275cmp=r.Xpm({type:g,selectors:[["app-developmentsection"]],ngContentSelectors:l,decls:4,vars:0,consts:[[1,"flex","align-items-center","line-height-3","bg-primary-600","text-white","p-3","text-lg","border-round","mb-3"],[1,"pi","pi-info-circle","text-lg","text-white","mr-2"]],template:function(e,k){1&e&&(r.F$t(),r.TgZ(0,"div",0),r._UZ(1,"i",1),r._uU(2," Accessibility guide documents the specification of this component based on WCAG guidelines, the implementation is in progress.\n"),r.qZA(),r.Hsn(3))},encapsulation:2}),M})()},91422:(h,v,p)=>{p.r(v),p.d(v,{InputMaskDemoModule:()=>O});var r=p(96814),l=p(60095),f=p(42129),g=p(7740),M=p(93189),c=p(97673),e=p(14769);let k=(()=>{var t;class a{}return(t=a).\u0275fac=function(n){return new(n||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[r.ez,l.u5,l.UX,g.zz,f.Bz,c.a,M.V,M.V]}),a})();var d=p(38454),_=p(22963);let Z=(()=>{var t;class a{constructor(){this.code={basic:'<label for="date">Date</label>\n<p-inputMask id="date"></p-inputMask>\n\n<span id="phone">Phone</span>\n<p-inputMask aria-labelledby="phone"></p-inputMask>\n\n<p-inputMask aria-label="Age"></p-inputMask>'}}}return(t=a).\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["accessibility-doc"]],inputs:{id:"id",title:"title"},decls:37,vars:6,consts:[[3,"title","id"],[3,"code","hideToggleCode","hideCodeSandbox","hideStackBlitz"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(n,o){1&n&&(e.TgZ(0,"app-developmentsection")(1,"div")(2,"app-docsectiontext",0)(3,"h3"),e._uU(4,"Screen Reader"),e.qZA(),e.TgZ(5,"p"),e._uU(6," InputMask component renders a native input element that implicitly includes any passed prop. Value to describe the component can either be provided via "),e.TgZ(7,"i"),e._uU(8,"label"),e.qZA(),e._uU(9," tag combined with "),e.TgZ(10,"i"),e._uU(11,"id"),e.qZA(),e._uU(12," prop or using "),e.TgZ(13,"i"),e._uU(14,"aria-labelledby"),e.qZA(),e._uU(15,", "),e.TgZ(16,"i"),e._uU(17,"aria-label"),e.qZA(),e._uU(18," props. "),e.qZA()(),e._UZ(19,"app-code",1),e.TgZ(20,"h3"),e._uU(21,"Keyboard Support"),e.qZA(),e.TgZ(22,"div",2)(23,"table",3)(24,"thead")(25,"tr")(26,"th"),e._uU(27,"Key"),e.qZA(),e.TgZ(28,"th"),e._uU(29,"Function"),e.qZA()()(),e.TgZ(30,"tbody")(31,"tr")(32,"td")(33,"i"),e._uU(34,"tab"),e.qZA()(),e.TgZ(35,"td"),e._uU(36,"Moves focus to the input."),e.qZA()()()()()()()),2&n&&(e.xp6(2),e.Q6J("title",o.title)("id",o.id),e.xp6(17),e.Q6J("code",o.code)("hideToggleCode",!0)("hideCodeSandbox",!0)("hideStackBlitz",!0))},dependencies:[c.h,d.c,_.N],encapsulation:2}),a})();var u=p(3443);let b=(()=>{var t;class a{constructor(){this.code={basic:'\n<p-inputMask mask="99-999999" [(ngModel)]="value" placeholder="99-999999"></p-inputMask>',html:'\n<div class="card flex justify-content-center">\n    <p-inputMask mask="99-999999" [(ngModel)]="value" placeholder="99-999999"></p-inputMask>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'input-mask-basic-demo',\n    templateUrl: './input-mask-basic-demo.html'\n})\nexport class InputMaskBasicDemo {\n    value: string | undefined;\n}"}}}return(t=a).\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["basic-doc"]],inputs:{id:"id",title:"title"},decls:10,vars:4,consts:[[1,"py-3"],[3,"title","id"],[1,"card","flex","justify-content-center"],["mask","99-999999","placeholder","99-999999",3,"ngModel","ngModelChange"],["selector","input-mask-basic-demo",3,"code"]],template:function(n,o){1&n&&(e.TgZ(0,"section",0)(1,"app-docsectiontext",1)(2,"p"),e._uU(3,"InputMask is used as a controlled input with "),e.TgZ(4,"i"),e._uU(5,"ngModel"),e.qZA(),e._uU(6," properties."),e.qZA()(),e.TgZ(7,"div",2)(8,"p-inputMask",3),e.NdJ("ngModelChange",function(s){return o.value=s}),e.qZA()(),e._UZ(9,"app-code",4),e.qZA()),2&n&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(7),e.Q6J("ngModel",o.value),e.xp6(1),e.Q6J("code",o.code))},dependencies:[l.JJ,l.On,u.vy,c.h,d.c],encapsulation:2}),a})(),y=(()=>{var t;class a{constructor(){this.code={basic:'\n<p-inputMask mask="999-99-9999" [(ngModel)]="value" [disabled]="true"></p-inputMask>',html:'\n<div class="card flex justify-content-center">\n    <p-inputMask mask="999-99-9999" [(ngModel)]="value" [disabled]="true"></p-inputMask>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'input-mask-disabled-demo',\n    templateUrl: './input-mask-disabled-demo.html'\n})\nexport class InputMaskDisabledDemo {\n    value: string | undefined;\n}"}}}return(t=a).\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["disabled-doc"]],inputs:{id:"id",title:"title"},decls:10,vars:5,consts:[[1,"py-3"],[3,"title","id"],[1,"card","flex","justify-content-center"],["mask","999-99-9999",3,"ngModel","disabled","ngModelChange"],["selector","input-mask-disabled-demo",3,"code"]],template:function(n,o){1&n&&(e.TgZ(0,"section",0)(1,"app-docsectiontext",1)(2,"p"),e._uU(3,"When "),e.TgZ(4,"i"),e._uU(5,"disabled"),e.qZA(),e._uU(6," is present, the element cannot be edited and focused."),e.qZA()(),e.TgZ(7,"div",2)(8,"p-inputMask",3),e.NdJ("ngModelChange",function(s){return o.value=s}),e.qZA()(),e._UZ(9,"app-code",4),e.qZA()),2&n&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(7),e.Q6J("ngModel",o.value)("disabled",!0),e.xp6(1),e.Q6J("code",o.code))},dependencies:[l.JJ,l.On,u.vy,c.h,d.c],encapsulation:2}),a})(),D=(()=>{var t;class a{constructor(){this.code={basic:'\n<span class="p-float-label">\n    <p-inputMask mask="999-99-9999" [(ngModel)]="value" id="ssn_input"></p-inputMask>\n    <label htmlFor="ssn_input">SSN</label>\n</span>',html:'\n<div class="card flex justify-content-center">\n    <span class="p-float-label">\n    <p-inputMask mask="999-99-9999" [(ngModel)]="value" id="ssn_input"></p-inputMask>\n    <label htmlFor="ssn_input">SSN</label>\n    </span>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'input-mask-floatlabel-demo',\n    templateUrl: './input-mask-floatlabel-demo.html'\n})\nexport class InputMaskFloatlabelDemo {\n    value: string | undefined;\n}"}}}return(t=a).\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["floatlabel-doc"]],inputs:{id:"id",title:"title"},decls:10,vars:4,consts:[[1,"py-3"],[3,"title","id"],[1,"card","flex","justify-content-center"],[1,"p-float-label"],["mask","999-99-9999","id","ssn_input",3,"ngModel","ngModelChange"],["htmlFor","ssn_input"],["selector","input-mask-floatlabel-demo",3,"code"]],template:function(n,o){1&n&&(e.TgZ(0,"section",0)(1,"app-docsectiontext",1)(2,"p"),e._uU(3,"A floating label appears on top of the input field when focused."),e.qZA()(),e.TgZ(4,"div",2)(5,"span",3)(6,"p-inputMask",4),e.NdJ("ngModelChange",function(s){return o.value=s}),e.qZA(),e.TgZ(7,"label",5),e._uU(8,"SSN"),e.qZA()()(),e._UZ(9,"app-code",6),e.qZA()),2&n&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(5),e.Q6J("ngModel",o.value),e.xp6(3),e.Q6J("code",o.code))},dependencies:[l.JJ,l.On,u.vy,c.h,d.c],encapsulation:2}),a})(),U=(()=>{var t;class a{constructor(){this.code={typescript:"import { InputMaskModule } from 'primeng/inputmask';"}}}return(t=a).\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["import-doc"]],inputs:{id:"id",title:"title"},decls:3,vars:4,consts:[[1,"py-3"],[3,"title","id"],[3,"code","hideToggleCode"]],template:function(n,o){1&n&&(e.TgZ(0,"section",0),e._UZ(1,"app-docsectiontext",1)(2,"app-code",2),e.qZA()),2&n&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(1),e.Q6J("code",o.code)("hideToggleCode",!0))},dependencies:[c.h,d.c],encapsulation:2}),a})(),T=(()=>{var t;class a{constructor(){this.code={basic:'\n<p-inputMask mask="999-99-9999" [(ngModel)]="value" class="ng-invalid ng-dirty"></p-inputMask>',html:'\n<div class="card flex justify-content-center">\n    <p-inputMask mask="999-99-9999" [(ngModel)]="value" class="ng-invalid ng-dirty"></p-inputMask>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'input-mask-invalid-demo',\n    templateUrl: './input-mask-invalid-demo.html'\n})\nexport class InputMaskInvalidDemo {\n    value: string | undefined;\n}"}}}return(t=a).\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["invalid-doc"]],inputs:{id:"id",title:"title"},decls:13,vars:4,consts:[[1,"py-3"],[3,"title","id"],[1,"card","flex","justify-content-center"],["mask","999-99-9999",1,"ng-invalid","ng-dirty",3,"ngModel","ngModelChange"],["selector","input-mask-invalid-demo",3,"code"]],template:function(n,o){1&n&&(e.TgZ(0,"section",0)(1,"app-docsectiontext",1)(2,"p"),e._uU(3,"Invalid state style is added using the "),e.TgZ(4,"i"),e._uU(5,"ng-invalid"),e.qZA(),e._uU(6," and "),e.TgZ(7,"i"),e._uU(8,"ng-dirty"),e.qZA(),e._uU(9," class to indicate a failed validation."),e.qZA()(),e.TgZ(10,"div",2)(11,"p-inputMask",3),e.NdJ("ngModelChange",function(s){return o.value=s}),e.qZA()(),e._UZ(12,"app-code",4),e.qZA()),2&n&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(10),e.Q6J("ngModel",o.value),e.xp6(1),e.Q6J("code",o.code))},dependencies:[l.JJ,l.On,u.vy,c.h,d.c],encapsulation:2}),a})(),A=(()=>{var t;class a{constructor(){this.code={basic:'\n<span class="font-bold block mb-2">SSN</span>\n<p-inputMask mask="999-99-9999" [(ngModel)]="value1" placeholder="999-99-9999"></p-inputMask>\n\n<span class="font-bold block mb-2">Phone</span>\n<p-inputMask mask="(999) 999-9999" [(ngModel)]="value2" placeholder="(999) 999-9999"></p-inputMask>\n\n<span class="font-bold block mb-2">Serial Number</span>\n<p-inputMask mask="a*-999-a999" [(ngModel)]="value3" placeholder="a*-999-a999"></p-inputMask>',html:'\n<div class="card p-fluid flex flex-wrap gap-3">\n    <div class="flex-auto">\n        <span class="font-bold block mb-2">SSN</span>\n        <p-inputMask mask="999-99-9999" [(ngModel)]="value1" placeholder="999-99-9999"></p-inputMask>\n    </div>\n\n    <div class="flex-auto">\n        <span class="font-bold block mb-2">Phone</span>\n        <p-inputMask mask="(999) 999-9999" [(ngModel)]="value2" placeholder="(999) 999-9999"></p-inputMask>\n    </div>\n\n    <div class="flex-auto">\n        <span class="font-bold block mb-2">Serial Number</span>\n        <p-inputMask mask="a*-999-a999" [(ngModel)]="value3" placeholder="a*-999-a999"></p-inputMask>\n    </div>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'input-mask-mask-demo',\n    templateUrl: './input-mask-mask-demo.html'\n})\nexport class InputMaskMaskDemo {\n    value1: string | undefined;\n\n    value2: string | undefined;\n\n    value3: string | undefined;\n}"}}}return(t=a).\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["input-mask-mask-demo"]],inputs:{id:"id",title:"title"},decls:36,vars:6,consts:[[1,"py-3"],[3,"title","id"],[1,"card","p-fluid","flex","flex-wrap","gap-3"],[1,"flex-auto"],[1,"font-bold","block","mb-2"],["mask","999-99-9999","placeholder","999-99-9999",3,"ngModel","ngModelChange"],["mask","(999) 999-9999","placeholder","(999) 999-9999",3,"ngModel","ngModelChange"],["mask","a*-999-a999","placeholder","a*-999-a999",3,"ngModel","ngModelChange"],["selector","input-mask-mask-demo",3,"code"]],template:function(n,o){1&n&&(e.TgZ(0,"section",0)(1,"app-docsectiontext",1)(2,"p"),e._uU(3," Mask format can be a combination of the following definitions; "),e.TgZ(4,"i"),e._uU(5,"a"),e.qZA(),e._uU(6," for alphabetic characters, "),e.TgZ(7,"i"),e._uU(8,"9"),e.qZA(),e._uU(9," for numeric characters and "),e.TgZ(10,"i"),e._uU(11,"*"),e.qZA(),e._uU(12," for alphanumberic characters. In addition, formatting characters like "),e.TgZ(13,"i"),e._uU(14,"("),e.qZA(),e._uU(15," , "),e.TgZ(16,"i"),e._uU(17,")"),e.qZA(),e._uU(18," , "),e.TgZ(19,"i"),e._uU(20,"-"),e.qZA(),e._uU(21," are also accepted. "),e.qZA()(),e.TgZ(22,"div",2)(23,"div",3)(24,"span",4),e._uU(25,"SSN"),e.qZA(),e.TgZ(26,"p-inputMask",5),e.NdJ("ngModelChange",function(s){return o.value1=s}),e.qZA()(),e.TgZ(27,"div",3)(28,"span",4),e._uU(29,"Phone"),e.qZA(),e.TgZ(30,"p-inputMask",6),e.NdJ("ngModelChange",function(s){return o.value2=s}),e.qZA()(),e.TgZ(31,"div",3)(32,"span",4),e._uU(33,"Serial Number"),e.qZA(),e.TgZ(34,"p-inputMask",7),e.NdJ("ngModelChange",function(s){return o.value3=s}),e.qZA()()(),e._UZ(35,"app-code",8),e.qZA()),2&n&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(25),e.Q6J("ngModel",o.value1),e.xp6(4),e.Q6J("ngModel",o.value2),e.xp6(4),e.Q6J("ngModel",o.value3),e.xp6(1),e.Q6J("code",o.code))},dependencies:[l.JJ,l.On,u.vy,c.h,d.c],encapsulation:2}),a})(),C=(()=>{var t;class a{constructor(){this.code={basic:'\n<p-inputMask mask="(999) 999-9999? x99999" [(ngModel)]="value" placeholder="(999) 999-9999? x99999"></p-inputMask>',html:'\n<div class="card flex justify-content-center">\n    <p-inputMask mask="(999) 999-9999? x99999" [(ngModel)]="value" placeholder="(999) 999-9999? x99999"></p-inputMask>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'input-mask-optional-demo',\n    templateUrl: './input-mask-optional-demo.html'\n})\nexport class InputMaskOptionalDemo {\n    value: string | undefined;\n}"}}}return(t=a).\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["optional-doc"]],inputs:{id:"id",title:"title"},decls:13,vars:4,consts:[[1,"py-3"],[3,"title","id"],[1,"card","flex","justify-content-center"],["mask","(999) 999-9999? x99999","placeholder","(999) 999-9999? x99999",3,"ngModel","ngModelChange"],["selector","input-mask-optional-demo",3,"code"]],template:function(n,o){1&n&&(e.TgZ(0,"section",0)(1,"app-docsectiontext",1)(2,"p"),e._uU(3,"When the input does not complete the mask definition, it is cleared by default. Use "),e.TgZ(4,"i"),e._uU(5,"autoClear"),e.qZA(),e._uU(6," property to control this behavior. In addition, "),e.TgZ(7,"i"),e._uU(8,"?"),e.qZA(),e._uU(9," is used to mark anything after the question mark optional."),e.qZA()(),e.TgZ(10,"div",2)(11,"p-inputMask",3),e.NdJ("ngModelChange",function(s){return o.value=s}),e.qZA()(),e._UZ(12,"app-code",4),e.qZA()),2&n&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(10),e.Q6J("ngModel",o.value),e.xp6(1),e.Q6J("code",o.code))},dependencies:[l.JJ,l.On,u.vy,c.h,d.c],encapsulation:2}),a})(),J=(()=>{var t;class a{constructor(){this.code={basic:'\n<p-inputMask mask="99-999999" [(ngModel)]="value" placeholder="99-999999"></p-inputMask>',html:'\n<div class="card flex justify-content-center">\n    <p-inputMask mask="99-999999" [(ngModel)]="value" placeholder="99-999999"></p-inputMask>\n</div>',typescript:"\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'input-mask-reactive-forms-demo',\n    templateUrl: './input-mask-reactive-forms-demo.html'\n})\nexport class InputMaskReactiveFormsDemo implements OnInit {\n    formGroup: FormGroup | undefined;\n\n    ngOnInit() {\n        this.formGroup = new FormGroup({\n            value: new FormControl<string | null>(null)\n        });\n    }\n}"}}ngOnInit(){this.formGroup=new l.cw({value:new l.NI(null)})}}return(t=a).\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["reactive-forms-doc"]],inputs:{id:"id",title:"title"},decls:11,vars:4,consts:[[1,"py-3"],[3,"title","id"],[1,"card","flex","justify-content-center"],[3,"formGroup"],["mask","99-999999","formControlName","value","placeholder","99-999999"],["selector","input-mask-reactive-forms-demo",3,"code"]],template:function(n,o){1&n&&(e.TgZ(0,"section",0)(1,"app-docsectiontext",1)(2,"p"),e._uU(3,"InputMask can also be used with reactive forms. In this case, the "),e.TgZ(4,"i"),e._uU(5,"formControlName"),e.qZA(),e._uU(6," property is used to bind the component to a form control."),e.qZA()(),e.TgZ(7,"div",2)(8,"form",3),e._UZ(9,"p-inputMask",4),e.qZA()(),e._UZ(10,"app-code",5),e.qZA()),2&n&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(7),e.Q6J("formGroup",o.formGroup),e.xp6(2),e.Q6J("code",o.code))},dependencies:[l._Y,l.JJ,l.JL,l.sg,l.u,u.vy,c.h,d.c],encapsulation:2}),a})(),I=(()=>{var t;class a{constructor(){this.code={basic:'\n<p-inputMask [(ngModel)]="value" mask="99/99/9999" placeholder="99/99/9999" slotChar="mm/dd/yyyy"></p-inputMask>',html:'\n<div class="card flex justify-content-center">\n    <p-inputMask [(ngModel)]="value" mask="99/99/9999" placeholder="99/99/9999" slotChar="mm/dd/yyyy"></p-inputMask>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'input-mask-slot-char-demo',\n    templateUrl: './input-mask-slot-char-demo.html'\n})\nexport class InputMaskSlotCharDemo {\n    value: string | undefined;\n}"}}}return(t=a).\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["slot-char-doc"]],inputs:{id:"id",title:"title"},decls:10,vars:4,consts:[[1,"py-3"],[3,"title","id"],[1,"card","flex","justify-content-center"],["mask","99/99/9999","placeholder","99/99/9999","slotChar","mm/dd/yyyy",3,"ngModel","ngModelChange"],["selector","input-mask-slot-char-demo",3,"code"]],template:function(n,o){1&n&&(e.TgZ(0,"section",0)(1,"app-docsectiontext",1)(2,"p"),e._uU(3,"Default placeholder for a mask is underscore that can be customized using "),e.TgZ(4,"i"),e._uU(5,"slotChar"),e.qZA(),e._uU(6," property."),e.qZA()(),e.TgZ(7,"div",2)(8,"p-inputMask",3),e.NdJ("ngModelChange",function(s){return o.value=s}),e.qZA()(),e._UZ(9,"app-code",4),e.qZA()),2&n&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(7),e.Q6J("ngModel",o.value),e.xp6(1),e.Q6J("code",o.code))},dependencies:[l.JJ,l.On,u.vy,c.h,d.c],encapsulation:2}),a})();const x=function(){return["/inputtext"]},q=function(){return["/theming"]};let S=(()=>{var t;class a{}return(t=a).\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["style-doc"]],inputs:{id:"id",title:"title"},decls:10,vars:6,consts:[[1,"py-3"],[3,"title","id"],["href","#",3,"routerLink"]],template:function(n,o){1&n&&(e.TgZ(0,"section",0)(1,"app-docsectiontext",1)(2,"p"),e._uU(3,"Styling is same as "),e.TgZ(4,"a",2),e._uU(5,"inputtext component"),e.qZA(),e._uU(6,", for theming classes visit "),e.TgZ(7,"a",2),e._uU(8,"theming page"),e.qZA(),e._uU(9,"."),e.qZA()()()),2&n&&(e.xp6(1),e.Q6J("title",o.title)("id",o.id),e.xp6(3),e.Q6J("routerLink",e.DdM(4,x)),e.xp6(3),e.Q6J("routerLink",e.DdM(5,q)))},dependencies:[f.rH,d.c],encapsulation:2}),a})();var F=p(89867);const Q=function(){return["InputMask"]};let N=(()=>{var t;class a{constructor(){this.docs=[{id:"import",label:"Import",component:U},{id:"basic",label:"Basic",component:b},{id:"reactive-forms",label:"Reactive Forms",component:J},{id:"mask",label:"Mask",component:A},{id:"slotchar",label:"Slot Char",component:I},{id:"optional",label:"Optional",component:C},{id:"floatlabel",label:"FloatLabel",component:D},{id:"disabled",label:"Disabled",component:y},{id:"invalid",label:"Invalid",component:T},{id:"style",label:"Style",component:S},{id:"accessibility",label:"Accessibility",component:Z}]}}return(t=a).\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["ng-component"]],decls:1,vars:3,consts:[["docTitle","Angular InputMask Component","header","InputMask","description","InputMask component is used to enter input in a certain format such as numeric, date, currency and phone.",3,"docs","apiDocs"]],template:function(n,o){1&n&&e._UZ(0,"app-doc",0),2&n&&e.Q6J("docs",o.docs)("apiDocs",e.DdM(2,Q))},dependencies:[F.x],encapsulation:2}),a})(),w=(()=>{var t;class a{}return(t=a).\u0275fac=function(n){return new(n||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[f.Bz.forChild([{path:"",component:N}]),f.Bz]}),a})(),O=(()=>{var t;class a{}return(t=a).\u0275fac=function(n){return new(n||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[r.ez,w,k]}),a})()}}]);